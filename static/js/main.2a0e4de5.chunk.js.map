{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","id","aria-current","home","type","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","speech","SpeechSynthesisUtterance","volume","rate","pitch","window","speechSynthesis","speak","CapitalizeWords","i","length","previousCharacter","split","Alert","alert","role","message","defaultProps","App","setAlert","setTimeout","_useState3","_useState4","setMode","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"mMAEe,SAASA,EAAOC,GAC7B,OACEC,EAAAC,EAAAC,cAAA,OACEC,UAAS,kCAAAC,OAAoCL,EAAMM,KAA1C,QAAAD,OAAqDL,EAAMM,OAEpEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,KAC9BP,EAAMQ,OAGTP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BK,GAAG,0BAC3CR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBM,eAAa,OAAOH,KAAK,KACrDP,EAAMW,OAGXV,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KACEC,UAAU,kBACVG,KAAK,mCAFP,uBAqBRN,EAAAC,EAAAC,cAAA,OACEC,UAAS,+BAAAC,OACQ,UAAfL,EAAMM,KAAmB,OAAS,UAGpCL,EAAAC,EAAAC,cAAA,SACEC,UAAU,mBACVQ,KAAK,WACLC,QAASb,EAAMc,WACfL,GAAG,2BAELR,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBW,QAAQ,0BAA5C,qBClDO,SAASC,EAAShB,GAAO,IAAAiB,EA4CdC,mBAAS,IA5CKC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GA4C/BK,EA5C+BH,EAAA,GA4CzBI,EA5CyBJ,EAAA,GA6CtC,OACElB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsB,SAAA,KACEvB,EAAAC,EAAAC,cAAA,OACEC,UAAU,OACVqB,MAAO,CAAEC,MAAsB,SAAf1B,EAAMM,KAAkB,QAAU,UAElDL,EAAAC,EAAAC,cAAA,UAAKH,EAAM2B,SACX1B,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,QAAQX,UAAU,eACjCH,EAAAC,EAAAC,cAAA,YACEC,UAAU,eACVwB,MAAON,EACPO,SA7Ce,SAACC,GACtBP,EAAQO,EAAMC,OAAOH,QA6CfH,MAAO,CACLO,gBAAgC,UAAfhC,EAAMM,KAAmB,QAAU,OACpDoB,MAAsB,SAAf1B,EAAMM,KAAkB,QAAU,SAE3CG,GAAG,QACHwB,KAAK,MAGPhC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wBAAwBS,QAhE1B,WACpB,IAAIqB,EAAUZ,EAAKa,cACnBZ,EAAQW,GACRlC,EAAMoC,UAAU,eAAgB,UA6D5B,iBAGAnC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BS,QA9D9B,WACpB,IAAIqB,EAAUZ,EAAKe,cACnBd,EAAQW,GACRlC,EAAMoC,UAAU,gBAAiB,UA2D7B,iBAGAnC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BS,QArCpD,WACE,IAAIyB,EAAS,IAAIC,yBACjBD,EAAOhB,KAAOA,EACdgB,EAAOE,OAAS,GAChBF,EAAOG,KAAO,EACdH,EAAOI,MAAQ,EACfC,OAAOC,gBAAgBC,MAAMP,GAC7BtC,EAAMoC,UAAU,kBAAmB,YA8B/B,UAGAnC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BS,QAtDlC,WAEhB,IADA,IAAIiC,EAAkBxB,EAAK,GAAGa,cACrBY,EAAI,EAAGA,GAAKzB,EAAK0B,OAAS,EAAGD,IAAK,CACzC,IACEE,EAAoB3B,EAAKyB,EAAI,GAM/BD,GALIG,GAA2C,MAAtBA,EACJ3B,EAAKyB,GAAGZ,cAERb,EAAKyB,GAI5BxB,EAAQuB,KA0CJ,cAGA7C,EAAAC,EAAAC,cAAA,UACEC,UAAU,4BACVS,QAhEiB,WAEvBU,EADc,IAEdvB,EAAMoC,UAAU,aAAc,UA+DvB,IAJH,UAQFnC,EAAAC,EAAAC,cAAA,OACEC,UAAU,YACVqB,MAAO,CAAEC,MAAsB,SAAf1B,EAAMM,KAAkB,QAAU,UAElDL,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SACGmB,EAAK4B,MAAM,KAAKF,OAAS,EAD5B,cAC0C1B,EAAK0B,OAD/C,eAGA/C,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAImB,EAAK0B,OAAS,EAAI1B,EAAO,uCC9FtB,SAAS6B,EAAMnD,GAC5B,OACEA,EAAMoD,OACJnD,EAAAC,EAAAC,cAAA,OACEC,UAAU,kDACViD,KAAK,SAELpD,EAAAC,EAAAC,cAAA,cAASH,EAAMoD,MAAMxC,MAJvB,IAIuCZ,EAAMoD,MAAME,SFmDzDvD,EAAOwD,aAAe,CACpB/C,MAAO,UACPG,KAAM,QGVO6C,MA5Cf,WAAe,IAAAvC,EACaC,mBAAS,MADtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNmC,EADMjC,EAAA,GACCsC,EADDtC,EAAA,GAEPiB,EAAY,SAACkB,EAAS1C,GAC1B6C,EAAS,CACPH,QAASA,EACT1C,KAAMA,IAER8C,WAAW,WACTD,EAAS,OACR,MATQE,EAYWzC,mBAAS,SAZpB0C,EAAAxC,OAAAC,EAAA,EAAAD,CAAAuC,EAAA,GAYNrD,EAZMsD,EAAA,GAYAC,EAZAD,EAAA,GAwBb,OACE3D,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsB,SAAA,KACEvB,EAAAC,EAAAC,cAACJ,EAAD,CACES,MAAM,YACNG,KAAK,OACLL,KAAMA,EACNQ,WAjBa,WACJ,UAATR,GACFuD,EAAQ,QACRC,SAASC,KAAKtC,MAAMO,gBAAkB,UACtCI,EAAU,8BAA+B,aAEzCyB,EAAQ,SACRC,SAASC,KAAKtC,MAAMO,gBAAkB,QACtCI,EAAU,+BAAgC,eAW1CnC,EAAAC,EAAAC,cAACgD,EAAD,CAAOC,MAAOA,IACdnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACa,EAAD,CACEoB,UAAWA,EACXT,QAAQ,+BACRrB,KAAMA,OCjCD0D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWhB,SAASiB,eAAe,SACpDC,OACH/E,EAAAC,EAAAC,cAACF,EAAAC,EAAM+E,WAAP,KACEhF,EAAAC,EAAAC,cAAC+E,EAAD,QAOJlB","file":"static/js/main.2a0e4de5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                {props.home}\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a\r\n                className=\"nav-link active\"\r\n                href=\"https://linktr.ee/nooneislikeme\"\r\n              >\r\n                About developer\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`form-check form-switch text-${\r\n          props.mode === \"light\" ? \"dark\" : \"light\"\r\n        }`}\r\n      >\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          onClick={props.toggleMode}\r\n          id=\"flexSwitchCheckDefault\"\r\n        />\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n          Enable darkmode\r\n        </label>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"loading\",\r\n  home: \"load\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\" Capitalised\", \"Done\");\r\n  };\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\" To lowercase\", \"Done\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\" All clear\", \"Done\");\r\n  };\r\n  const CapFClick = () => {\r\n    let CapitalizeWords = text[0].toUpperCase();\r\n    for (let i = 1; i <= text.length - 1; i++) {\r\n      let currentCharacter,\r\n        previousCharacter = text[i - 1];\r\n      if (previousCharacter && previousCharacter === \" \") {\r\n        currentCharacter = text[i].toUpperCase();\r\n      } else {\r\n        currentCharacter = text[i];\r\n      }\r\n      CapitalizeWords = CapitalizeWords + currentCharacter;\r\n    }\r\n    setText(CapitalizeWords);\r\n  };\r\n  function speaktext() {\r\n    var speech = new SpeechSynthesisUtterance();\r\n    speech.text = text;\r\n    speech.volume = 12;\r\n    speech.rate = 1;\r\n    speech.pitch = 1;\r\n    window.speechSynthesis.speak(speech);\r\n    props.showAlert(\" Am Speaking...\", \"Listen\");\r\n  }\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"mb-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h3>{props.heading}</h3>\r\n        <label htmlFor=\"mybox\" className=\"form-label\"></label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          style={{\r\n            backgroundColor: props.mode === \"light\" ? \"white\" : \"grey\",\r\n            color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n          }}\r\n          id=\"mybox\"\r\n          rows=\"8\"\r\n        ></textarea>\r\n\r\n        <button className=\"btn btn-primary my-3 \" onClick={handleUpClick}>\r\n          for upperCase\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-1\" onClick={handleLoClick}>\r\n          for lowerCase\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-1\" onClick={speaktext}>\r\n          listen\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-1\" onClick={CapFClick}>\r\n          capital it\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary my-3 mx-1\"\r\n          onClick={handleClearClick}\r\n        >\r\n          {\" \"}\r\n          Clear\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h2>Your Text summary</h2>\r\n        <p>\r\n          {text.split(\" \").length - 1} words and {text.length} characters\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Enter your text in box to preview\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className=\"alert alert-warning alert-dismissible fade show\"\r\n        role=\"alert\"\r\n      >\r\n        <strong>{props.alert.type}</strong>:{props.alert.message}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\n// ok\n\nfunction App() {\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const [mode, setMode] = useState(\"light\");\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#1a2756\";\n      showAlert(\" Dark mode has been enabled\", \"Success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\" Light mode has been enabled\", \"Success\");\n    }\n  };\n  return (\n    <>\n      <Navbar\n        title=\"TextUtils\"\n        home=\"Home\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-5\">\n        <TextForm\n          showAlert={showAlert}\n          heading=\"Welcome to text modification\"\n          mode={mode}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}